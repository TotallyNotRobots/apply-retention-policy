name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.23.x]

    steps:
      - uses: actions/checkout@v4

      - name: Cache Bazel cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum', '**/MODULE.bazel', '**/MODULE.bazel.lock') }}
          restore-keys: bazel-cache-${{ runner.os }}-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Set up Bazel
        uses: bazelbuild/setup-bazelisk@v3

      - name: Restore Bazel cache (if available)
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum', '**/MODULE.bazel', '**/MODULE.bazel.lock') }}
          restore-keys: bazel-cache-${{ runner.os }}-

      - name: Run tests
        run: bazel test //...
        shell: bash

      - name: Run linter
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --config=.golangci.yml

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          fail_ci_if_error: true

