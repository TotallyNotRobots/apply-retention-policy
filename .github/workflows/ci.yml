name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Cache Bazel cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum', '**/MODULE.bazel', '**/MODULE.bazel.lock') }}
          restore-keys: |
            bazel-cache-${{ runner.os }}-

      - name: Setup Go toolchain
        run: |
          # Use Bazel to download and setup the Go toolchain
          bazel build @rules_go//go
          # Add the Go toolchain to PATH
          echo "$(bazel info bazel-bin)/external/rules_go+/go/tools/go_bin_runner/bin" >> $GITHUB_PATH
        shell: bash

      - name: Run tests (${{ runner.os }})
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            bazel test //...
          else
            bazel coverage --combined_report=lcov //...
            cp bazel-out/_coverage/_coverage_report.dat coverage.txt
          fi
        shell: bash

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: runner.os != 'Windows'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          fail_ci_if_error: true
          verbose: true

  lint:
    name: Lint (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go toolchain
        run: |
          # Use Bazel to download and setup the Go toolchain
          bazel build @rules_go//go/tools/go_bin_runner:go_bin_runner
          # Add the Go toolchain to PATH
          echo "$(bazel info bazel-bin)/external/rules_go+/go/tools/go_bin_runner/bin" >> $GITHUB_PATH
        shell: bash

      - name: print go version and path
        run: |
          which go
          go version
          echo $GITHUB_PATH
        shell: bash

      - name: Run linter
        run: bazel run //:golangci-lint -- run
        shell: bash

      - name: Run buildifier
        run: bazel run //:buildifier.check
        shell: bash
