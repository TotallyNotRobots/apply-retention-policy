name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - uses: bazel-contrib/setup-bazel@4fd964a13a440a8aeb0be47350db2fc640f19ca8 # 0.15.0
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per run.
          disk-cache: ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}
          # Share repository cache between workflows.
          repository-cache: true
          bazelrc: |
            common --lockfile_mode=error

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build apply-retention-policy
        shell: bash
        run: |
          set -e
          bazel build //:release_files --define=version=${{ steps.get_version.outputs.version }}
          mkdir -p out
          ls -l
          ls -l bazel-bin/
          cd out

          cp ../bazel-bin/apply-retention-policy-*.tar.gz .
          cp ../bazel-bin/apply-retention-policy-*.zip .

      - name: Make checksums
        working-directory: out
        run: |
          sha256sum * > SHA256SUMS

      - name: Build and push multi-arch image
        run: |
          bazel run //:push -- \
            --tag=${{ steps.get_version.outputs.version }} \
            --tag=latest
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          draft: false
          name: Release ${{ steps.get_version.outputs.version }}
          files: out/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
