# The MIT License (MIT)
#
# Copyright Â© 2025 linuxdaemon <linuxdaemon.irc@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

"""Bazel module for the apply-retention-policy tool."""

module(name = "apply-retention-policy")

bazel_dep(name = "aspect_bazel_lib", version = "2.21.1")
bazel_dep(name = "rules_go", version = "0.57.0")
bazel_dep(name = "gazelle", version = "0.45.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "bazel_skylib", version = "1.8.2")

bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2", dev_dependency = True)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "golangci_lint_linux_amd64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "c77313a77e19b06123962c411d9943cc0d092bbec76b956104d18964e274902e",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.5.0/golangci-lint-2.5.0-linux-amd64.tar.gz"],
)

http_archive(
    name = "golangci_lint_linux_arm64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "48693a98a7f4556d1117300aae240d0fe483df8d6f36dfaba56504626101a66e",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.5.0/golangci-lint-2.5.0-linux-arm64.tar.gz"],
)

http_archive(
    name = "golangci_lint_darwin_amd64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "a7e684872b00637d642d088dde783c1b871161a92678fcf13d07abe6b5c32e36",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.5.0/golangci-lint-2.5.0-darwin-amd64.tar.gz"],
)

http_archive(
    name = "golangci_lint_darwin_arm64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "0b3cbdc2a2472f60b538ebccb1b2e1ae5d938a051c010591aa68c6efd3706672",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.5.0/golangci-lint-2.5.0-darwin-arm64.tar.gz"],
)

http_archive(
    name = "golangci_lint_windows_amd64",
    build_file_content = """
exports_files(["golangci-lint.exe"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint.exe golangci-lint.exe"],
    sha256 = "8d37563c2549e38135eac46e778164d2c5b1e96b9211f2087814d74ca0f358a8",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.5.0/golangci-lint-2.5.0-windows-amd64.zip"],
)

http_archive(
    name = "golangci_lint_windows_arm64",
    build_file_content = """
exports_files(["golangci-lint.exe"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint.exe golangci-lint.exe"],
    sha256 = "b08f2ac149428307a14d733772720c84893d17e0d1ff2506623b00e7246229b1",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.5.0/golangci-lint-2.5.0-windows-arm64.zip"],
)

# Register Go toolchain
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")

# Register Go dependencies
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_spf13_cobra", "com_github_spf13_viper", "com_github_stretchr_testify", "org_golang_x_sys", "org_uber_go_zap")

# Register distroless images and make them available
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:fa15492938650e1a5b87e34d47dc7d99a2b4e8aefd81b931b3f3eb6bb4c1d2f6",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64_v8")

zstd = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
zstd.zstd()
use_repo(zstd, "zstd_toolchains")

register_toolchains("@zstd_toolchains//:all")
