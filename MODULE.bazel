# The MIT License (MIT)
#
# Copyright Â© 2025 linuxdaemon <linuxdaemon.irc@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

"""Bazel module for the apply-retention-policy tool."""

module(name = "apply-retention-policy")

bazel_dep(name = "aspect_bazel_lib", version = "2.20.0")
bazel_dep(name = "rules_go", version = "0.56.1")
bazel_dep(name = "gazelle", version = "0.45.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "bazel_skylib", version = "1.8.1")

bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2", dev_dependency = True)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "golangci_lint_linux_amd64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "57c3a4c56b8363f7f1f695ac957b0bb474aca00c490bc5e949669a6c2ba5c432",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.3.1/golangci-lint-2.3.1-linux-amd64.tar.gz"],
)

http_archive(
    name = "golangci_lint_linux_arm64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "41f391f6cdefb48ffc2ff61c27ee10fd2085e9945a8e49cf1556210f8ae27888",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.3.1/golangci-lint-2.3.1-linux-arm64.tar.gz"],
)

http_archive(
    name = "golangci_lint_darwin_amd64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "2f4412ffa77cb58ab3a7d065e1fff01ab714bb2b6fa06ad16ed793b6fc8d534d",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.3.1/golangci-lint-2.3.1-darwin-amd64.tar.gz"],
)

http_archive(
    name = "golangci_lint_darwin_arm64",
    build_file_content = """
exports_files(["golangci-lint"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint golangci-lint"],
    sha256 = "ca2b5bef12070add95ecc926c12c6301ca31619bcedde48bf63a89f3f0d2ec37",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.3.1/golangci-lint-2.3.1-darwin-arm64.tar.gz"],
)

http_archive(
    name = "golangci_lint_windows_amd64",
    build_file_content = """
exports_files(["golangci-lint.exe"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint.exe golangci-lint.exe"],
    sha256 = "d34e228cc2bec6d3f74fcfc7754542b045d0d373b9173942bf89d09b8004c7d0",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.3.1/golangci-lint-2.3.1-windows-amd64.zip"],
)

http_archive(
    name = "golangci_lint_windows_arm64",
    build_file_content = """
exports_files(["golangci-lint.exe"])
""",
    patch_cmds = ["cp golangci-lint-*/golangci-lint.exe golangci-lint.exe"],
    sha256 = "125efde831d81e2546c1a33fb4436e36ad25baf47c882f8e6a5665bb4f81f386",
    urls = ["https://github.com/golangci/golangci-lint/releases/download/v2.3.1/golangci-lint-2.3.1-windows-arm64.zip"],
)

# Register Go toolchain
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")

# Register Go dependencies
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_spf13_cobra", "com_github_spf13_viper", "com_github_stretchr_testify", "org_golang_x_sys", "org_uber_go_zap")

# Register distroless images and make them available
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:4f6e739881403e7d50f52a4e574c4e3c88266031fd555303ee2f1ba262523d6a",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64_v8")

zstd = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
zstd.zstd()
use_repo(zstd, "zstd_toolchains")

register_toolchains("@zstd_toolchains//:all")
